---
import {getUserInfo} from "./api/AuthService";
import Navbar from "../components/Navbar";
const user = await getUserInfo(Astro.cookies.get("token")!.value);
export const prerender = false;

if (!user) {
    Astro.redirect("/login");
}
---
<head>
    <link rel="icon" href="/youtag.png" type="image/x-icon"/>
    <title>YOUTAG Profile</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<Navbar user={user!} client:load/>

<div class="flex flex-col items-center justify-center min-h-screen bg-black/70 px-4 py-6 sm:py-0">
    <div class="bg-black/70 shadow-lg rounded-lg p-4 sm:p-8 w-full max-w-xs sm:max-w-sm">
        <div class="flex flex-col items-center">
            <img
                    src={user ? user.thumbnailUrl : ""}
                    alt={user? user.name:"Invalid User"}
                    class="w-24 h-24 sm:w-32 sm:h-32 rounded-full mb-3 sm:mb-4"
            />
            <h2 class="text-xl sm:text-2xl font-bold mb-1 sm:mb-2 text-white">{user? user.name:"Invalid User"}</h2>
            <p class="text-gray-300 text-sm sm:text-base mb-4 sm:mb-6">{user? user.name:"Invalid Email"}</p>

            <div class="flex flex-col space-y-3 sm:space-y-4 w-full">
                <button
                        id="logout-btn"
                        class="bg-blue-400 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded text-sm sm:text-base transition-colors duration-200 w-full"
                >
                    Logout
                </button>
                <button
                        class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded text-sm sm:text-base transition-colors duration-200 w-full"
                        id="delete-account-btn"
                >
                    Delete Account
                </button>
            </div>
        </div>
    </div>

    <!-- Old Modal (hidden but kept for reference) -->
    <div id="confirmation-modal" class="hidden"></div>

    <!-- New Joke Modal -->
    <div id="joke-modal"
         class="hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center z-50 p-4">
        <div class="bg-white p-4 sm:p-6 rounded-lg shadow-lg w-full max-w-[280px] sm:max-w-sm text-center transform transition-all duration-300">
            <div class="space-y-3 sm:space-y-4">
                <div class="text-xl sm:text-2xl font-bold text-red-500 animate-bounce">ðŸ¤ª Womp Womp! ðŸ¤ª</div>
                <p class="text-base sm:text-lg font-semibold mb-2 sm:mb-4">Nice try, but you're stuck with us forever!</p>
                <div class="text-gray-600 italic text-sm sm:text-base">"You can check out any time you like,<br>But you can never leave!"</div>
                <div class="text-3xl sm:text-4xl mb-3 sm:mb-4">ðŸŽ¸</div>
                <button id="sad-ok-btn"
                        class="bg-blue-500 hover:bg-blue-600 text-white py-1.5 sm:py-2 px-4 sm:px-6 rounded-full transform transition-all duration-300 hover:scale-105 text-sm sm:text-base">
                    *sad ok*
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    const deleteAccountBtn = document.getElementById("delete-account-btn");
    const jokeModal = document.getElementById("joke-modal");
    const sadOkBtn = document.getElementById("sad-ok-btn");
    const logoutBtn = document.getElementById("logout-btn");

    // Logout functionality
    logoutBtn!.addEventListener("click", async () => {
        const astroResp = await fetch("/api/cookie", {
            method: "DELETE",
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify({
                name: "token",
                httpOnly: false
            }),
            credentials: "include",
        });
        localStorage.removeItem("token");
        window.location.reload();
    });

    // Show joke modal with a slight delay for dramatic effect
    deleteAccountBtn!.addEventListener("click", () => {
        setTimeout(() => {
            jokeModal!.classList.remove("hidden");
            const modalContent = jokeModal!.querySelector("div");
            modalContent!.classList.add("scale-110");
            setTimeout(() => modalContent!.classList.remove("scale-110"), 200);
        }, 300);
    });

    // Hide joke modal with a fun bounce effect
    sadOkBtn!.addEventListener("click", () => {
        const modalContent = jokeModal!.querySelector("div");
        modalContent!.classList.add("scale-95");
        setTimeout(() => {
            jokeModal!.classList.add("hidden");
            modalContent!.classList.remove("scale-95");
        }, 200);
    });

    // Easter egg: Play sound after 3 rapid clicks on delete button
    let clickCount = 0;
    let lastClickTime = 0;

    deleteAccountBtn!.addEventListener("click", () => {
        const currentTime = new Date().getTime();
        if (currentTime - lastClickTime < 500) {
            clickCount++;
            if (clickCount >= 3) {
                const audio = new Audio("https://www.soundjay.com/misc/sounds/fail-trombone-01.mp3");
                audio.play().catch(e => console.log("Auto-play prevented"));
                clickCount = 0;
            }
        } else {
            clickCount = 1;
        }
        lastClickTime = currentTime;
    });
</script>